{"version":3,"sources":["redux/reducers/actions.ts","static/img/shopping-cart.svg","redux/actions/actionCreator.ts","types/card.ts","components/Card.tsx","pages/home.tsx","redux/actions/formActionCreators.ts","helpers/helperes.ts","components/CreditCard.tsx","components/Form.tsx","components/Good.tsx","components/GoodsList.tsx","pages/cart.tsx","helpers/validation.ts","App.tsx","redux/reducers/cartReducer.ts","redux/reducers/cardReducer.ts","redux/reducers/rootReducer.ts","redux/redux.ts","index.tsx"],"names":["ActionsTypes","CardActionTypes","Card","image","name","price","isPurchased","id","dispatch","useDispatch","className","src","alt","to","onClick","payload","value","type","buy","Home","products","useSelector","state","cartImg","map","product","key","totalPriceHelper","parseFloat","toFixed","reset","alert","getImageName","number","CreditCard","card","expires","useMemo","string","res","i","expiresHelper","parseInt","mask","placeholder","placeholderChar","disabled","holder","Form","onSubmit","e","preventDefault","guide","onChange","event","target","setNumber","setHolder","required","setExpires","cvv","setCvv","Good","remove","add","GoodsList","goods","cart","length","good","Cart","totalPrice","validation","firstNum","month","slice","year","tHolder","trim","validate","App","path","component","initialState","rootReducer","combineReducers","action","cartItem","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e2598f2.chunk.js","sourcesContent":["export enum ActionsTypes {\r\n    buy = 'ADD_TO_CART',\r\n    add = 'ADD_ONE_TO_CART',\r\n    remove = 'REMOVE_ONE_FROM_CART',\r\n    reset = 'RESET'\r\n}","export default __webpack_public_path__ + \"static/media/shopping-cart.c9ecf411.svg\";","import {IAction, ICartItem, IClearAction, IProduct} from \"../../types/types\";\r\nimport {ActionsTypes} from \"../reducers/actions\";\r\n\r\n\r\nexport const buyProduct = (payload: ICartItem): IAction => {\r\n    return {\r\n        type: ActionsTypes.buy,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const addOneProduct = (payload: IProduct): IAction => {\r\n    return {\r\n        type: ActionsTypes.add,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const removeOneProduct = (payload: IProduct): IAction => {\r\n    return {\r\n        type: ActionsTypes.remove,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const sessionResetCreator = (): IClearAction => {\r\n    return {\r\n        type: ActionsTypes.reset\r\n    }\r\n}","export interface CardState {\r\n    number: string\r\n    holder: string\r\n    expires: string\r\n    cvv: string\r\n}\r\n\r\nexport enum CardActionTypes {\r\n    setNumber = 'SET_NUMBER',\r\n    setHolder = 'SET_HOLDER',\r\n    setExpires = 'SET_EXPIRES',\r\n    setCvv = 'SET_CVV',\r\n    reset = 'RESET'\r\n}\r\n\r\nexport interface CardAction {\r\n    type: CardActionTypes,\r\n    payload?: string\r\n}","import React from 'react';\r\nimport {IProduct} from \"../types/types\";\r\nimport {buyProduct} from \"../redux/actions/actionCreator\";\r\nimport {useDispatch} from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Card: React.FC<IProduct> = ({image, name, price, isPurchased, id}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className='main-card'>\r\n            <div className=\"main-card__img\">\r\n                <img src={image} alt={name}/>\r\n            </div>\r\n\r\n            <h3 className=\"main-card__title\">\r\n                {name}\r\n            </h3>\r\n\r\n            <div className=\"main-card__price\">\r\n                Price: {price}$\r\n            </div>\r\n\r\n            {!isPurchased ? <button\r\n                onClick={() => dispatch(buyProduct({image, name, price, id, value: 1})) }\r\n                className=\"main-card__btn\"\r\n            >\r\n                Add to cart\r\n            </button> : <NavLink to='/cart' className='main-card__btn'>Place an order</NavLink>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport {State} from \"../types/types\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport cartImg from '../static/img/shopping-cart.svg'\r\nimport Card from \"../components/Card\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {IRootState} from \"../redux/reducers/rootReducer\";\r\n\r\n\r\n\r\nconst Home: React.FC = () => {\r\n    const products: State = useSelector((state: IRootState) => state.products);\r\n    return (\r\n        <main className='main'>\r\n            <div className=\"container\">\r\n                <div className=\"main__link\">\r\n                    <NavLink to='/cart'>\r\n                        <img src={cartImg} alt=\"Cart\"/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className=\"main-cards\">\r\n                    {products.products.map((product) => <Card {...product} key={product.id} />) }\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;","import {CardAction, CardActionTypes} from \"../../types/card\";\r\n\r\n\r\nexport const setNumberCreator = (payload: string): CardAction => {\r\n    return {\r\n        type: CardActionTypes.setNumber,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setCvvCreator = (payload: string): CardAction => {\r\n    return {\r\n        type: CardActionTypes.setCvv,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setHolderCreator = (payload: string): CardAction => {\r\n    return {\r\n        type: CardActionTypes.setHolder,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setExpiresCreator = (payload: string): CardAction => {\r\n    return {\r\n        type: CardActionTypes.setExpires,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const formResetCreator = (): CardAction => {\r\n    return {\r\n        type: CardActionTypes.reset\r\n    }\r\n}","import {formResetCreator} from \"../redux/actions/formActionCreators\";\r\nimport {sessionResetCreator} from \"../redux/actions/actionCreator\";\r\nimport {IClearAction} from \"../types/types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {CardAction, CardState} from \"../types/card\";\r\n\r\n\r\nexport const totalPriceHelper = (price: number): number => {\r\n    return parseFloat(price.toFixed(1))\r\n}\r\n\r\nexport const strTrim = (str: string): string => {\r\n    let res = ''\r\n    for (let i = 0; i < str.length; i++) {\r\n        let char = str[i].trim()\r\n        if (char !== '') {\r\n            res += char\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\nexport const buy = (dispatch: Dispatch<CardAction | IClearAction>): void => {\r\n    dispatch(formResetCreator())\r\n    dispatch(sessionResetCreator())\r\n    alert('Successfully bought! Thank you to visit our shop!')\r\n}\r\n\r\nexport const expiresHelper = (string: string, card: CardState): string => {\r\n    let res = ''\r\n    for (let i = 0; i < 2; i++) {\r\n        let char = card.expires[i]\r\n        char ? res += char : res += 'M'\r\n    }\r\n    res += '/'\r\n    for (let i = 3; i < 5; i++) {\r\n        let char = card.expires[i]\r\n        char ? res += char : res += 'Y'\r\n    }\r\n    return res\r\n}\r\n\r\nexport const getImageName = (number: number): string | boolean => {\r\n    switch (number) {\r\n        case 5:\r\n            return 'mc'\r\n        case 2:\r\n            return 'mir'\r\n        case 4:\r\n            return 'visa'\r\n        default: return false\r\n    }\r\n}\r\n","import React, {useMemo} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {IRootState} from \"../redux/reducers/rootReducer\";\r\nimport {expiresHelper, getImageName} from \"../helpers/helperes\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport {CardState} from \"../types/card\";\r\n\r\nconst CreditCard = () => {\r\n    const card: CardState = useSelector((state: IRootState) => state.card)\r\n    const expires: string = useMemo(() => expiresHelper(card.expires, card), [card.expires])\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__bank\">\r\n                {\r\n                    getImageName(parseInt(card.number[0]))\r\n                        ? <img\r\n                            src={`./img/${getImageName(parseInt(card.number[0]))}.png`}\r\n                            alt=\"Bank\"\r\n                        />\r\n                        : null\r\n                }\r\n            </div>\r\n\r\n\r\n            <div className=\"card-number\">\r\n                <MaskedInput\r\n                    mask={[/[1-9]/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/,]}\r\n                    placeholder={'#### #### #### ####'}\r\n                    placeholderChar='#'\r\n                    disabled\r\n                    value={card.number}\r\n                    className='card-number__item'\r\n                />\r\n            </div>\r\n\r\n            <div className=\"card-info\">\r\n                <div className=\"card-info-item\">\r\n                    <h4 className=\"card-info-item__title\">\r\n                        Card Holder\r\n                    </h4>\r\n                    {card.holder ? card.holder : 'NAME LASTNAME'}\r\n                </div>\r\n\r\n                <div className=\"card-info-item\">\r\n                    <h4 className=\"card-info-item__title\">\r\n                        Expires\r\n                    </h4>\r\n                    {\r\n                        expires\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreditCard;","import React from 'react';\r\nimport {\r\n    setCvvCreator,\r\n    setExpiresCreator,\r\n    setHolderCreator,\r\n    setNumberCreator\r\n} from \"../redux/actions/formActionCreators\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {IRootState} from \"../redux/reducers/rootReducer\";\r\nimport MaskedInput from 'react-text-mask'\r\nimport {CardState} from \"../types/card\";\r\n\r\nconst Form = () => {\r\n    const card: CardState = useSelector((state: IRootState) => state.card)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={(e) => e.preventDefault()} className=\"card-form\">\r\n            <fieldset>\r\n                Card Number\r\n\r\n                <MaskedInput\r\n                    mask={[/[1-9]/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, /\\d/,]}\r\n                    placeholderChar='#'\r\n                    guide={false}\r\n                    value={card.number}\r\n                    onChange={(event) => dispatch(setNumberCreator(event.target.value))}\r\n                    className='card-form__input'\r\n                    type='text'\r\n                />\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                Card Holder\r\n                <input\r\n                    value={card.holder}\r\n                    onChange={(event) => dispatch(setHolderCreator(event.target.value))}\r\n                    className='card-form__input'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </fieldset>\r\n\r\n\r\n            <div className=\"card-form-row\">\r\n                <fieldset>\r\n                    Expires\r\n                    <MaskedInput\r\n                        mask={[/[0-9]/, /\\d/, '/', /\\d/, /\\d/]}\r\n                        value={card.expires}\r\n                        guide={false}\r\n                        placeholder='MM/YY'\r\n                        onChange={(event) => dispatch(setExpiresCreator(event.target.value))}\r\n                        className='card-form__input'\r\n                        type='text'\r\n                        required\r\n                    />\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    CVV\r\n                    <MaskedInput\r\n                        guide={false}\r\n                        value={card.cvv}\r\n                        mask={[/[0-9]/, /\\d/, /\\d/]}\r\n                        onChange={(event) => dispatch(setCvvCreator(event.target.value))}\r\n                        className='card-form__input'\r\n                        type='password'\r\n                        required\r\n                    />\r\n                </fieldset>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport {ICartItem} from \"../types/types\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addOneProduct, removeOneProduct} from \"../redux/actions/actionCreator\";\r\n\r\nconst Good: React.FC<ICartItem> = ({id, price, name, value}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className='goods-item'>\r\n            <h5 className=\"goods-item__title\">{name}</h5>\r\n\r\n            <div>\r\n                <div className=\"goods-item-counter\">\r\n                    <button onClick={() => dispatch(removeOneProduct({id, price, value, name,  image: '', isPurchased: true}))} className=\"goods-item-counter__btn\">-</button>\r\n                    {value}\r\n                    <button onClick={() => dispatch(addOneProduct({id, price, name, value, isPurchased: true, image: ''}))} className=\"goods-item-counter__btn\">+</button>\r\n                </div>\r\n\r\n                Price: {price}$\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Good;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {ICartItem} from \"../types/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Good from \"./Good\";\r\nimport {IRootState} from \"../redux/reducers/rootReducer\";\r\n\r\n\r\n\r\nconst GoodsList: React.FC = () => {\r\n    const goods: ICartItem[] = useSelector((state: IRootState) => state.products.cart)\r\n\r\n    return (\r\n        <ul className='goods'>\r\n            {\r\n                goods.length === 0 ? <li className='goods-item goods-item_empty'><NavLink to='/'>Your Cart is empty! Go to home page to buy something!</NavLink></li>\r\n                    : goods.map(good => <Good {...good} key={good.id} />)\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default GoodsList;","import React from 'react';\r\nimport CreditCard from '../components/CreditCard';\r\nimport Form from '../components/Form';\r\nimport GoodsList from \"../components/GoodsList\";\r\nimport {ICartItem} from \"../types/types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {buy} from \"../helpers/helperes\";\r\nimport {IRootState} from \"../redux/reducers/rootReducer\";\r\nimport {validate} from \"../helpers/validation\";\r\n\r\nconst Cart: React.FC = () => {\r\n    const goods: ICartItem[] = useSelector((state: IRootState) => state.products.cart)\r\n    const totalPrice: number = useSelector((state: IRootState) => state.products.totalPrice)\r\n    const {expires, number, holder, cvv} = useSelector((state: IRootState) => state.card)\r\n    const dispatch = useDispatch()\r\n    const validation = () => {\r\n        if (validate({expires, number, holder, cvv})) {\r\n            buy(dispatch)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='cart'>\r\n            <div className=\"container_small\">\r\n                <div className=\"card-container\">\r\n                    <CreditCard />\r\n\r\n                    <Form/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container container_goods\">\r\n                <GoodsList />\r\n\r\n                {goods.length > 0 ? <div className=\"cart-info\">\r\n                    <h2>Total price: {totalPrice}$</h2>\r\n\r\n                    <button onClick={() => validation()} className=\"cart-info__btn\">Buy</button>\r\n                </div> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","interface IValidation {\r\n    number: string\r\n    holder: string\r\n    expires: string\r\n    cvv: string\r\n}\r\n\r\nexport const validate = ({expires, holder, number, cvv}: IValidation): boolean => {\r\n    const firstNum = parseInt(number[0])\r\n    const month = parseInt(expires.slice(0,2))\r\n    const year = parseInt(expires.slice(3,5))\r\n    const tHolder = holder.trim()\r\n\r\n    switch (firstNum) {\r\n        case 4:\r\n            break\r\n        case 5:\r\n            break\r\n        case 2:\r\n            break\r\n        default:\r\n            alert('Wrong type of card! We supported only Visa, MasterCard and Mir.')\r\n            return false\r\n    }\r\n\r\n    if (tHolder.length > 60 || tHolder.length < 4) {\r\n        alert('Information about holder is too long or too short! It must be shorter than 60 characters and bigger than 4 characters.')\r\n        return false\r\n    } else if (month > 12 || year < 21) {\r\n        alert('Wrong month or year. Please check that month is less or equal 12 and year is 21 or bigger.')\r\n        return false\r\n    } else if (cvv.length < 3) {\r\n        alert('Your cvv code is too short! It must be 3 characters.')\r\n        return false\r\n    } else if (number.length < 16) {\r\n        alert('Your card number is too short! It must be 16 characters.')\r\n        return false\r\n    } else {\r\n        return true\r\n    }\r\n}\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/home';\nimport Cart from \"./pages/cart\";\n\nconst App: React.FC = () => {\n    return (\n        <Switch >\n            <Route path='/cart' component={Cart} />\n            <Route path='/' component={Home} />\n        </Switch>\n    );\n};\n\nexport default App;","import {IAction, ICartItem, IProduct, State} from \"../../types/types\";\r\nimport {ActionsTypes} from \"./actions\";\r\nimport {totalPriceHelper} from \"../../helpers/helperes\";\r\n\r\nconst initialState: State = {\r\n    products: [\r\n        {\r\n            id: 1,\r\n            name: 'Pineapple',\r\n            price: 5,\r\n            image: 'https://images.unsplash.com/photo-1490885578174-acda8905c2c6?ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8cGluZWFwcGxlfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n            isPurchased: false,\r\n            value: 0\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'MacBook',\r\n            price: 1000,\r\n            image: 'https://images.unsplash.com/photo-1517059224940-d4af9eec41b7?ixid=MnwxMjA3fDB8MHxzZWFyY2h8N3x8YmxhY2slMjBhcHBsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n            isPurchased: false,\r\n            value: 0\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Pencil',\r\n            price: 0.3,\r\n            image: 'https://images.unsplash.com/photo-1589278559766-6d2fc8520367?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fHBlbmNpbHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n            isPurchased: false,\r\n            value: 0\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Banana',\r\n            price: 5,\r\n            image: 'https://images.unsplash.com/photo-1481349518771-20055b2a7b24?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8YmFuYW5hfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n            isPurchased: false,\r\n            value: 0\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'House',\r\n            price: 100000,\r\n            image: 'https://images.unsplash.com/photo-1580587771525-78b9dba3b914?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8aG91c2V8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n            isPurchased: false,\r\n            value: 0\r\n        },\r\n    ],\r\n    cart: [],\r\n    totalPrice: 0\r\n}\r\n\r\nexport const cartReducer = (state: State = initialState, action: IAction): State => {\r\n    switch (action.type) {\r\n        case ActionsTypes.buy:\r\n            return <State>{\r\n                totalPrice: totalPriceHelper(state.totalPrice + action.payload.price),\r\n                products: state.products.map((product) => {\r\n                    if (product.id === action.payload.id) {\r\n                        return <IProduct>{\r\n                            ...action.payload,\r\n                            isPurchased: true\r\n                        }\r\n                    } else {\r\n                        return product\r\n                    }\r\n                }),\r\n                cart: [...state.cart, action.payload]\r\n            }\r\n        case ActionsTypes.reset: return initialState\r\n        case ActionsTypes.remove:\r\n            let cart: ICartItem[]\r\n            if (action.payload.value > 1) {\r\n                cart = state.cart.map((cartItem) => {\r\n                    if (cartItem.id === action.payload.id) {\r\n                        return {\r\n                            ...action.payload,\r\n                            value: cartItem.value - 1\r\n                        }\r\n                    } else {\r\n                        return cartItem\r\n                    }\r\n                })\r\n            } else {\r\n                cart = state.cart.filter((cartItem) => cartItem.id !== action.payload.id)\r\n            }\r\n            return {\r\n                products: state.products.map((product) => {\r\n                    if (product.id === action.payload.id) {\r\n                        return {\r\n                            ...product,\r\n                            isPurchased: false\r\n                        }\r\n                    } else {\r\n                        return product\r\n                    }\r\n                }),\r\n                totalPrice: totalPriceHelper(state.totalPrice - action.payload.price),\r\n                cart\r\n            }\r\n        case ActionsTypes.add:\r\n            return <State>{\r\n                ...state,\r\n                totalPrice: totalPriceHelper(state.totalPrice + action.payload.price),\r\n                cart: state.cart.map((cartItem) => {\r\n                    if (cartItem.id === action.payload.id) {\r\n                        return {\r\n                            ...cartItem,\r\n                            value: cartItem.value + 1\r\n                        }\r\n                    } else {\r\n                        return cartItem\r\n                    }\r\n                })\r\n            }\r\n        default: return state\r\n    }\r\n}","import {CardAction, CardActionTypes, CardState} from \"../../types/card\";\r\n\r\n\r\nconst initialState: CardState = {\r\n    number: '',\r\n    holder: '',\r\n    expires: '',\r\n    cvv: ''\r\n}\r\n\r\nexport const cardReducer = (state: CardState = initialState, action: CardAction) => {\r\n    switch (action.type) {\r\n        case CardActionTypes.setCvv:\r\n            return {\r\n                ...state,\r\n                cvv: action.payload\r\n            }\r\n        case CardActionTypes.setExpires:\r\n            return {\r\n                ...state,\r\n                expires: action.payload\r\n            }\r\n        case CardActionTypes.reset:\r\n            return initialState\r\n        case CardActionTypes.setHolder:\r\n            return {\r\n                ...state,\r\n                holder: action.payload\r\n            }\r\n        case CardActionTypes.setNumber:\r\n            return {\r\n                ...state,\r\n                number: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {cartReducer} from \"./cartReducer\";\r\nimport {cardReducer} from \"./cardReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    products: cartReducer,\r\n    card: cardReducer\r\n})\r\n\r\nexport type IRootState = ReturnType<typeof rootReducer>","import {createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers/rootReducer\";\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './static/styles/index.scss';\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { store } from './redux/redux';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}